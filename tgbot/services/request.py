import aiohttp


def correct_input(name: str) -> str:
    """
    Removes everything from the string except letters, numbers, spaces, hyphens, and underscores.

    :param name: Source string
    :return: Processed string
    """
    source_string: str = name[:30]
    processed_string: str = ""
    for char in source_string:
        if char.isalnum() or char == '-' or char == '_':
            processed_string += char
        elif char.isspace() and (not processed_string or not processed_string[-1].isspace()):
            processed_string += char
    return processed_string


async def find_city(city: str) -> set:
    """
    Queries the list of cities from the site by the first letters of the city name.

    :param city: City name
    :return: Set of tuples of found cities (city id, region id, city name)
    """
    cities: set = set()
    link: str = 'https://dom.ria.com/node/api/autocompleteCities?labelName=output&lang_id=4&text='
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url=f'{link}{correct_input(name=city)}') as responce:
                for city in await responce.json():
                    if str(city.get('payload').get('areaId')) == 'None':
                        cities.add((city.get('payload').get('cityId'),
                                    city.get('payload').get('stateId'),
                                    city.get('text')))
    finally:
        return cities


async def get_quantity_ads(url: str) -> int:
    """
    Queries the quantity of ads according to the parameters specified by the user.

    :param url: The string generated by the user's request
    :return: Quantity of ads
    """
    result: int = 0
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url=url) as responce:
                ads: dict = await responce.json()
                result = ads.get('count')
    finally:
        return result


async def get_ad_id(url: str) -> list:
    """
    Queries a list of ad id's according to the parameters specified by the user.

    :param url: The string generated by the user's request
    :return: List of ad id's
    """
    result: list = []
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url=url) as responce:
                ads: dict = await responce.json()
                result = ads.get('items')
    finally:
        return result


async def get_ad(id_ad: int) -> str:
    """
    Getting information about the ad and forming a text to send to the user

    :param id_ad: ad id
    :return: Formed string with the description of the ad.
    """
    url = f'https://dom.ria.com/node/searchEngine/v2/view/realty/{id_ad}?lang_id=4'
    result: str = ''
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url=url) as responce:
                ad: dict = await responce.json()
                link: str = f'https://dom.ria.com/uk/{ad.get("beautiful_url")}'
                title: str = f'{ad.get("rooms_count")}к {ad.get("realty_type_name_uk").casefold()} на ' \
                             f'{ad.get("street_name")}'
                price: str = f'{ad.get("priceArr").get("3")} грн.'
                floor: str = f'{ad.get("floor_info")}'
                desc: str = f'{" ".join(ad.get("description").splitlines())}'
                result: str = f'<b><a href="{link}">{title}</a></b>\n<b>{price}</b>\n<b>{floor}</b>\n{desc}'
    finally:
        return result
